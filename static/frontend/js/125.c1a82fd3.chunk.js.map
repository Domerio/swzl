{"version":3,"file":"js/125.c1a82fd3.chunk.js","mappings":"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","sources":["webpack://frontend/./src/views/Login/index.vue","webpack://frontend/src/views/Login/index.vue","webpack://frontend/./src/views/Login/index.vue?02b9","webpack://frontend/./src/views/Login/index.vue?8e58","webpack://frontend/./node_modules/core-js/modules/es.iterator.for-each.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"login-container\"},[_c('el-card',{staticClass:\"login-card\"},[_c('div',{staticClass:\"title\"},[_vm._v(\"校园失物招领系统\")]),_c('el-tabs',{model:{value:(_vm.activeTab),callback:function ($$v) {_vm.activeTab=$$v},expression:\"activeTab\"}},[_c('el-tab-pane',{attrs:{\"label\":\"登录\",\"name\":\"login\"}},[_c('el-form',{ref:\"loginForm\",attrs:{\"model\":_vm.loginForm,\"rules\":_vm.loginRules}},[_c('el-form-item',{attrs:{\"prop\":\"username\"}},[_c('el-input',{attrs:{\"placeholder\":\"学号/工号\"},model:{value:(_vm.loginForm.username),callback:function ($$v) {_vm.$set(_vm.loginForm, \"username\", $$v)},expression:\"loginForm.username\"}},[_c('i',{staticClass:\"el-input__icon el-icon-user\",attrs:{\"slot\":\"prefix\"},slot:\"prefix\"})])],1),_c('el-form-item',{attrs:{\"prop\":\"password\"}},[_c('el-input',{attrs:{\"type\":\"password\",\"placeholder\":\"密码\",\"show-password\":\"\"},model:{value:(_vm.loginForm.password),callback:function ($$v) {_vm.$set(_vm.loginForm, \"password\", $$v)},expression:\"loginForm.password\"}},[_c('i',{staticClass:\"el-input__icon el-icon-lock\",attrs:{\"slot\":\"prefix\"},slot:\"prefix\"})])],1),_c('el-form-item',[_c('el-button',{staticStyle:{\"width\":\"100%\"},attrs:{\"type\":\"primary\"},on:{\"click\":_vm.handleLogin}},[_vm._v(\" 登录 \")])],1)],1)],1),_c('el-tab-pane',{attrs:{\"label\":\"注册\",\"name\":\"register\"}},[_c('el-form',{ref:\"registerForm\",attrs:{\"model\":_vm.registerForm,\"rules\":_vm.registerRules}},[_c('el-form-item',{attrs:{\"prop\":\"username\"}},[_c('el-input',{attrs:{\"placeholder\":\"学号/工号\"},model:{value:(_vm.registerForm.username),callback:function ($$v) {_vm.$set(_vm.registerForm, \"username\", $$v)},expression:\"registerForm.username\"}},[_c('i',{staticClass:\"el-input__icon el-icon-user\",attrs:{\"slot\":\"prefix\"},slot:\"prefix\"})])],1),_c('el-form-item',{attrs:{\"prop\":\"name\"}},[_c('el-input',{attrs:{\"placeholder\":\"真实姓名\"},model:{value:(_vm.registerForm.real_name),callback:function ($$v) {_vm.$set(_vm.registerForm, \"real_name\", $$v)},expression:\"registerForm.real_name\"}},[_c('i',{staticClass:\"el-input__icon el-icon-user\",attrs:{\"slot\":\"prefix\"},slot:\"prefix\"})])],1),_c('el-form-item',{attrs:{\"prop\":\"password\"}},[_c('el-input',{attrs:{\"type\":\"password\",\"placeholder\":\"密码\",\"show-password\":\"\"},model:{value:(_vm.registerForm.password),callback:function ($$v) {_vm.$set(_vm.registerForm, \"password\", $$v)},expression:\"registerForm.password\"}},[_c('i',{staticClass:\"el-input__icon el-icon-lock\",attrs:{\"slot\":\"prefix\"},slot:\"prefix\"})])],1),_c('el-form-item',{attrs:{\"prop\":\"confirmPassword\"}},[_c('el-input',{attrs:{\"type\":\"password\",\"placeholder\":\"确认密码\",\"show-password\":\"\"},model:{value:(_vm.registerForm.confirmPassword),callback:function ($$v) {_vm.$set(_vm.registerForm, \"confirmPassword\", $$v)},expression:\"registerForm.confirmPassword\"}},[_c('i',{staticClass:\"el-input__icon el-icon-lock\",attrs:{\"slot\":\"prefix\"},slot:\"prefix\"})])],1),_c('el-form-item',{attrs:{\"prop\":\"role\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"请选择身份\"},model:{value:(_vm.registerForm.role),callback:function ($$v) {_vm.$set(_vm.registerForm, \"role\", $$v)},expression:\"registerForm.role\"}},[_c('el-option',{attrs:{\"label\":\"学生\",\"value\":\"student\"}}),_c('el-option',{attrs:{\"label\":\"教职工\",\"value\":\"staff\"}})],1)],1),_c('el-form-item',[_c('el-button',{staticStyle:{\"width\":\"100%\"},attrs:{\"type\":\"primary\"},on:{\"click\":_vm.handleRegister}},[_vm._v(\" 注册 \")])],1)],1)],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"login-container\">\r\n    <el-card class=\"login-card\">\r\n      <div class=\"title\">校园失物招领系统</div>\r\n\r\n      <el-tabs v-model=\"activeTab\">\r\n        <el-tab-pane label=\"登录\" name=\"login\">\r\n          <el-form ref=\"loginForm\" :model=\"loginForm\" :rules=\"loginRules\">\r\n            <el-form-item prop=\"username\">\r\n              <el-input\r\n                  v-model=\"loginForm.username\"\r\n                  placeholder=\"学号/工号\">\r\n                <i slot=\"prefix\" class=\"el-input__icon el-icon-user\"></i>\r\n              </el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item prop=\"password\">\r\n              <el-input\r\n                  v-model=\"loginForm.password\"\r\n                  type=\"password\"\r\n                  placeholder=\"密码\"\r\n                  show-password>\r\n                <i slot=\"prefix\" class=\"el-input__icon el-icon-lock\"></i>\r\n              </el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item>\r\n              <el-button type=\"primary\" style=\"width: 100%\" @click=\"handleLogin\">\r\n                登录\r\n              </el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n        </el-tab-pane>\r\n\r\n        <el-tab-pane label=\"注册\" name=\"register\">\r\n          <el-form ref=\"registerForm\" :model=\"registerForm\" :rules=\"registerRules\">\r\n            <el-form-item prop=\"username\">\r\n              <el-input\r\n                  v-model=\"registerForm.username\"\r\n                  placeholder=\"学号/工号\">\r\n                <i slot=\"prefix\" class=\"el-input__icon el-icon-user\"></i>\r\n              </el-input>\r\n            </el-form-item>\r\n\r\n\r\n            <!-- 定义一个表单项，用于输入姓名 -->\r\n            <el-form-item prop=\"name\">\r\n              <el-input\r\n                  v-model=\"registerForm.real_name\"\r\n                  placeholder=\"真实姓名\">\r\n                <i slot=\"prefix\" class=\"el-input__icon el-icon-user\"></i>\r\n              </el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item prop=\"password\">\r\n              <el-input\r\n                  v-model=\"registerForm.password\"\r\n                  type=\"password\"\r\n                  placeholder=\"密码\"\r\n                  show-password>\r\n                <i slot=\"prefix\" class=\"el-input__icon el-icon-lock\"></i>\r\n              </el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item prop=\"confirmPassword\">\r\n              <el-input\r\n                  v-model=\"registerForm.confirmPassword\"\r\n                  type=\"password\"\r\n                  placeholder=\"确认密码\"\r\n                  show-password>\r\n                <i slot=\"prefix\" class=\"el-input__icon el-icon-lock\"></i>\r\n              </el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item prop=\"role\">\r\n              <el-select v-model=\"registerForm.role\" placeholder=\"请选择身份\" style=\"width: 100%\">\r\n                <el-option label=\"学生\" value=\"student\"/>\r\n                <el-option label=\"教职工\" value=\"staff\"/>\r\n              </el-select>\r\n            </el-form-item>\r\n\r\n            <el-form-item>\r\n              <el-button type=\"primary\" style=\"width: 100%\" @click=\"handleRegister\">\r\n                注册\r\n              </el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'UserLogin', // 组件名称\r\n  data() {\r\n    const validateConfirmPassword = (rule, value, callback) => {\r\n      if (value !== this.registerForm.password) {\r\n        callback(new Error('两次输入的密码不一致'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      activeTab: 'login',\r\n      loginForm: {\r\n        username: '',\r\n        password: ''\r\n      },\r\n      registerForm: {\r\n        username: '',\r\n        real_name: '',\r\n        password: '',\r\n        confirm_Password: '',\r\n        role: '',\r\n        csrfToken: '',\r\n      },\r\n      loginRules: {\r\n        username: [{required: true, message: '请输入学号/工号', trigger: 'blur'}],\r\n        password: [{required: true, message: '请输入密码', trigger: 'blur'}]\r\n      },\r\n      registerRules: {\r\n        username: [{required: true, message: '请输入学号/工号', trigger: 'blur'}],\r\n        real_name: [{required: true, message: '请输入姓名', trigger: 'blur'}],\r\n        password: [\r\n          {required: true, message: '请输入密码', trigger: 'blur'},\r\n          {min: 6, message: '密码长度不能小于6位', trigger: 'blur'}\r\n        ],\r\n        confirmPassword: [\r\n          {required: true, message: '请确认密码', trigger: 'blur'},\r\n          {validator: validateConfirmPassword, trigger: 'blur'}\r\n        ],\r\n        role: [{required: true, message: '请选择身份', trigger: 'change'}]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    async handleLogin() {\r\n      try {\r\n        await this.$refs.loginForm.validate()\r\n        const response = await this.$http({\r\n          url: '/login/',\r\n          method: 'post',\r\n          data: {\r\n            username: this.loginForm.username,\r\n            password: this.loginForm.password\r\n          }\r\n        })\r\n\r\n        // 存储token和用户信息\r\n        await this.$store.dispatch('login', {\r\n          token: response.token,\r\n          user: {\r\n            id: response.user_id,\r\n            username: response.username,\r\n            role: response.role,\r\n            real_name: response.real_name\r\n          }\r\n        })\r\n\r\n        this.$message.success('登录成功')\r\n\r\n        // 根据角色直接跳转到对应页面\r\n        const roleRouteMap = {\r\n          student: '/student-dashboard',\r\n          staff: '/staff-dashboard',\r\n          admin: '/admin-dashboard'\r\n        }\r\n\r\n        // 获取重定向地址或使用默认路由\r\n        const redirect = this.$route.query.redirect || roleRouteMap[response.role] || '/'\r\n\r\n        // 使用 replace 而不是 push 来避免在历史记录中留下多余的记录\r\n        this.$router.replace(redirect).catch(err => {\r\n          if (err.name !== 'NavigationDuplicated') {\r\n            console.error('Navigation error:', err)\r\n            this.$router.replace(roleRouteMap[response.role] || '/')\r\n          }\r\n        })\r\n      } catch (error) {\r\n        console.error('Login error:', error)\r\n        const errorMsg = error.response?.data?.error || error.response?.data?.message || '登录失败，请检查用户名和密码'\r\n        this.$message.error(errorMsg)\r\n      }\r\n    },\r\n\r\n    handleRegister: async function () {\r\n      try {\r\n        // 验证表单\r\n        await this.$refs.registerForm.validate()\r\n\r\n        // 先获取CSRF令牌\r\n        const csrfToken = await this.$http.get('/csrf-token/')\r\n        // 打印发送的数据，用于调试\r\n        const data = {\r\n          username: this.registerForm.username,\r\n          password: this.registerForm.password,\r\n          confirm_password: this.registerForm.confirmPassword,\r\n          real_name: this.registerForm.real_name,\r\n          role: this.registerForm.role,\r\n          // csrfToken: this.registerForm.csrfToken\r\n          csrfToken: csrfToken,\r\n        };\r\n        console.log('Sending registration data:', data);\r\n        // 发送注册请求\r\n        const response = await this.$http({\r\n          url: '/register/',\r\n          method: 'post',\r\n          data: data\r\n        })\r\n        // 显示注册成功的消息\r\n        this.$message.success(response.message || '注册成功')\r\n        await this.$nextTick();\r\n        // 注册成功后自动登录\r\n        await this.$store.dispatch('login', {\r\n          token: response.token,\r\n          user: {\r\n            id: response.user_id,\r\n            username: response.username,\r\n            role: response.role,\r\n            real_name: response.real_name\r\n          }\r\n        })\r\n        // 等待 Vuex 状态更新完成\r\n        await this.$nextTick()\r\n        // 根据角色跳转到对应的仪表板\r\n        const roleRouteMap = {\r\n          student: '/student-dashboard',\r\n          staff: '/staff-dashboard',\r\n          admin: '/admin-dashboard'\r\n        }\r\n        // 跳转到对应的仪表板\r\n        await this.$router.replace(roleRouteMap[response.role] || '/')\r\n            .catch(err => {\r\n          if (err.name !== 'NavigationDuplicated') {\r\n            console.error('Navigation error:', err)\r\n          }\r\n        })\r\n        this.$message.success(response.message || '登录成功')\r\n      } catch (error) {\r\n        console.error('Register error:', error)\r\n        if (error.response && error.response.data) {\r\n          const errorData = error.response.data.error\r\n          if (typeof errorData === 'object') {\r\n            // 处理字段级别的错误\r\n            Object.keys(errorData).forEach(field => {\r\n              this.$message.error(`${field}: ${errorData[field]}`)\r\n            })\r\n          } else {\r\n            // 处理一般错误消息\r\n            this.$message.error(errorData || '注册失败，请重试')\r\n          }\r\n        } else {\r\n          this.$message.error('注册失败，请重试')\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: linear-gradient(135deg, #8BC6EC 0%, #9599E2 100%);\r\n}\r\n\r\n.login-card {\r\n  width: 400px;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.title {\r\n  text-align: center;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 30px;\r\n  color: #409EFF;\r\n}\r\n\r\n.el-tabs {\r\n  margin-top: 20px;\r\n}\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=43748e72&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=43748e72&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"43748e72\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar iterate = require('../internals/iterate');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\n\n// `Iterator.prototype.forEach` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.foreach\n$({ target: 'Iterator', proto: true, real: true }, {\n  forEach: function forEach(fn) {\n    anObject(this);\n    aCallable(fn);\n    var record = getIteratorDirect(this);\n    var counter = 0;\n    iterate(record, function (value) {\n      fn(value, counter++);\n    }, { IS_RECORD: true });\n  }\n});\n"],"names":["render","_vm","this","_c","_self","staticClass","_v","model","value","activeTab","callback","$$v","expression","attrs","ref","loginForm","loginRules","username","$set","slot","password","staticStyle","on","handleLogin","registerForm","registerRules","real_name","confirmPassword","role","handleRegister","staticRenderFns","name","data","validateConfirmPassword","rule","Error","confirm_Password","csrfToken","required","message","trigger","min","validator","methods","$refs","validate","response","$http","url","method","$store","dispatch","token","user","id","user_id","$message","success","roleRouteMap","student","staff","admin","redirect","$route","query","$router","replace","catch","err","console","error","errorMsg","get","confirm_password","log","$nextTick","errorData","Object","keys","forEach","field","component","$","iterate","aCallable","anObject","getIteratorDirect","target","proto","real","fn","record","counter","IS_RECORD"],"sourceRoot":""}